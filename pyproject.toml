[tool.poetry]
name = "ras"
version = "0.1.0"
description = "Integrated routing and appointment scheduling."
authors = ["Leon Lan <leon.lanyidong@gmail.com>"]
packages = [
    {include = "ras"},
    {include = "benchmark.py"},
]


[tool.poetry.scripts]
benchmark = "benchmark:main"


[tool.poetry.dependencies]
python = "^3.9,<4.0"
numpy = "^1.23.3"
matplotlib = "^3.6.0"
scipy = "^1.9.3"
alns = "5.0.4"
elkai = "^0.1.2"
networkx = "^3.1" # for plotting
gurobipy = "^11.0.0"


[tool.poetry.group.benchmark.dependencies]
# Needed to run benchmark.py
tqdm = "^4.64.1"


[tool.poetry.group.results]
optional = true

[tool.poetry.group.results.dependencies]
# Needed to run notebooks to analyse results
pandas = "^2.0.1"
jupyterlab = "^3.6.1"
seaborn = "^0.12.2"
scienceplots = "^2.1.0"


[tool.poetry.group.dev.dependencies]
pytest = "^5.2"
isort = "^5.10.1"
black = "^22.8.0"
pre-commit = "^2.20.0"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
]
ignore = [
    "E501",  # line too long, handled by black
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"benchmark.py" = ["E402", "E741"]
